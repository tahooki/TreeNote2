<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" "http://mybatis.org/dtd.mybatis-3-config.dtd">

<mapper namespace="UserMapper">


	<resultMap type="user" id="userMap">
		<result property="userNo" column="USER_NO" jdbcType="INTEGER"></result>
		<result property="email" column="EMAIL" jdbcType="VARCHAR"></result>
		<result property="password" column="PASSWORD" jdbcType="VARCHAR" />
		<result property="name" column="NAME" jdbcType="VARCHAR" />
		<result property="phone" column="PHONE" jdbcType="VARCHAR" />
		<result property="photo" column="PHOTO" jdbcType="VARCHAR" />
		<result property="snsUser" column="SNSUSER" jdbcType="VARCHAR" />
		<result property="editTreeNo" column="EDIT_TREE_NO" jdbcType="INTEGER" />
		<result property="requestStatus" column="REQUEST_STATUS" jdbcType="INTEGER"/>
		<result property="activity" column="ACTIVITY" jdbcType="INTEGER"/>
		<result property="role" column="ROLE" jdbcType="VARCHAR"/>
	</resultMap>


	<select id="findUser" parameterType="string" resultMap="userMap">
		SELECT * from USERS
		<where>
			user_no =#{value}
		</where>
	</select>

	<select id="getUser" parameterType="int" resultMap="userMap">
		SELECT user_no, edit_tree_no, email, password, name, phone, photo,
		snsuser, activity, role
		FROM users
		<where>
			user_no = #{value}
		</where>
	</select>



	<select id="getLoginUser" parameterType="string" resultMap="userMap">
		SELECT 
			user_no, 
			edit_tree_no, 
			email, 
			password, 
			name, 
			phone, 
			photo,
			snsuser,  
			activity, 
			role
		FROM users
		<where>
			email = #{value} 
		</where>

	</select>


	<insert id="addUser" parameterType="user">
		INSERT INTO USERS (
		user_no,
		email,
		password,
		name,
		phone,
		photo,
		edit_tree_no
		)
		VALUES (
		SEQ_USERS_USER_NO.nextval,
		#{email},
		#{password},
		#{name},
		#{phone:VARCHAR},
		#{photo:VARCHAR},
		0
		)
	</insert>


	<!-- <insert id="addUser2" parameterType="user" > INSERT INTO USERS { user_no, 
		email, password, name, phone, photo, snsuser } VALUES { #{userNo}, #{email}, 
		#{password}, #{name}, #{phone}, #{photo}, #{snsUser} } </insert> -->






	<update id="updateUser" parameterType="user">
		UPDATE USERS
		<set>
			EMAIL = #{email:VARCHAR},
			<if test="#{password}!=null">PASSWORD=#{password},</if>
			NAME = #{name:VARCHAR},
			PHONE = #{phone:VARCHAR},
			PHOTO =
			#{photo:VARCHAR},
			SNSUSER = #{snsUser:VARCHAR}
		</set>
		<where>
			USER_NO = #{userNo}
		</where>

	</update>


	<select id="listFriend" parameterType="map" resultMap="userMap">
	SELECT 
		uu.user_no, 
		uu.email, 
		uu.name, 
		uu.photo, 
		ff.request_status 
	FROM users uu, friends ff
	<where>
		uu.user_no = ff.USER_NO2 and
		ff.user_no2 in(SELECT f.User_NO2
					  	FROM USERS u, FRIENDS f
					 	where u.USER_NO = f.USER_NO AND u.user_no = #{userNo1})
		and ff.user_no = #{userNo2}
	</where>
 
	</select>
	


<!-- 추가 !! 수정중인 트리 일련번호 업데이트 - by.Tahooki -->
	<update id="updateEditTreeNo" parameterType="user">
		UPDATE USERS
		<set>
			EDIT_TREE_NO = #{editTreeNo}
		</set>
		<where>
			USER_NO = #{userNo}
		</where>
	</update>


<!--추가!! 친구요청시 친구 테이블에 추가  -->
<insert id="requestFriend" parameterType="map" >
		INSERT ALL INTO FRIENDS (
			user_no,
			user_no2
		)
		VALUES (
			#{userNo},
			#{userNo2}
		)
		INTO FRIENDS (
			user_no,
			user_no2,
			request_status			
		)
		VALUES
		(
			#{userNo2},
			#{userNo},
			1
		)
		SELECT * FROM dual
	</insert>
	
	
	
	
	<update id="acceptFriend" parameterType="map">
		UPDATE 
			(select * from friends where user_no=#{userNo} and user_no2=#{userNo2} or user_no=#{userNo2} and user_no2=#{userNo})
		<set>
			request_status = 2
		</set>
		
	</update>
	
	
	<delete id="declineFriend" parameterType="map">
		DELETE FROM  
			(select * from friends where user_no=#{userNo} and user_no2=#{userNo2} or user_no=#{userNo2} and user_no2=#{userNo})
		
		
	</delete>
	
	
	<insert id="snsSignup" parameterType="user">
		INSERT INTO users(
			user_no,
			email,
			password,
			name,
			snsuser,
			photo,
			edit_tree_no,
			activity
			)
		VALUES(
			SEQ_USERS_USER_NO.nextval,
			#{email},
			#{password},
			#{name},
			#{snsUser},
			#{photo:VARCHAR},
			0,
			1
		)
		
	</insert>
	
	<select id="fLogin" parameterType="user" resultMap="userMap">
		SELECT 
			user_no,
			email,
			name,
			edit_tree_no,
			photo,
			phone
		FROM users
		WHERE snsuser=#{snsUser}
						
	</select>


</mapper>